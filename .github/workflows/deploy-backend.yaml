name: Deploy and Destroy Backend

on:
  workflow_dispatch:  # Manual trigger required

# Concurrency control to ensure only one workflow runs at a time
concurrency:
  group: deploy-and-destroy-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-backend:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check.outputs.exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Check if Backend Exists
        id: check
        run: |
          terraform init -backend-config=backend-dev.tfvars -reconfigure
          if terraform state list | grep "backend_resource" || true; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        working-directory: ./environments/backend



  deploy-backend:
    needs: check-backend
    if: needs.check-backend.outputs.backend_exists == 'false'  # Use job outputs correctly
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init -backend-config=backend-dev.tfvars -reconfigure
        working-directory: ./environments/backend

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend

  deploy-dev:
    needs: deploy-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init -backend-config=backend-dev.tfvars -reconfigure
        working-directory: ./environments/infra

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  destroy-dev:
    if: github.event_name == 'workflow_dispatch' && inputs.confirm_destroy == true
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init -backend-config=backend-dev.tfvars -reconfigure
        working-directory: ./environments/infra

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/infra

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  destroy-backend:
    needs: destroy-dev
    if: github.event_name == 'workflow_dispatch' && inputs.confirm_destroy == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init -backend-config=backend-dev.tfvars -reconfigure
        working-directory: ./environments/backend

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/backend

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend
