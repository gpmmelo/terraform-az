name: Deploy and Destroy Backend

on:
  workflow_dispatch:  # Only manual trigger allowed

# Concurrency control to prevent conflicts
concurrency:
  group: deploy-and-destroy-backend-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Deploy Backend (Manual Trigger)
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Dev)
        run: terraform init -backend-config=backend-dev.tfvars
        working-directory: ./environments/backend

      - name: Terraform Plan for Dev
        run: terraform plan -var-file=dev.tfvars
        working-directory: ./environments/backend

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads  # Replace with actual team members

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend

  # Deploy Infra (Manual, After Backend)
  deploy-infra:
    needs: deploy-backend  # Ensures backend is deployed first
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Dev)
        run: terraform init -backend-config=backend-dev.tfvars
        working-directory: ./environments/infra

      - name: Terraform Plan for Dev
        run: terraform plan -var-file=dev.tfvars
        working-directory: ./environments/infra

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  # Destroy Infra (Manual)
  destroy-infra:
    runs-on: ubuntu-latest
    needs: deploy-infra  # Ensures infra was deployed before destruction

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Dev)
        run: terraform init -backend-config=backend-dev.tfvars
        working-directory: ./environments/infra

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/infra

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  # Destroy Backend (Manual, After Infra)
  destroy-backend:
    runs-on: ubuntu-latest
    needs: destroy-infra  # Ensures infra is destroyed first

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Dev)
        run: terraform init -backend-config=backend-dev.tfvars
        working-directory: ./environments/backend

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/backend

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend

  # Deploy to Prod (Only on Main after PR Merge)
  deploy-prod:
    if: github.ref == 'refs/heads/main'  # Only run for main branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Prod)
        run: terraform init -backend-config=backend-prod.tfvars
        working-directory: ./environments/infra

      - name: Terraform Plan for Prod
        run: terraform plan -var-file=prod.tfvars
        working-directory: ./environments/infra

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Apply for Prod
        run: terraform apply -auto-approve -var-file=prod.tfvars
        working-directory: ./environments/infra
