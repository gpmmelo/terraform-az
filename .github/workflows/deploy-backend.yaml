name: Deploy and Destroy Backend

on:
  push:
    branches:
      - developer  # Trigger on push to developer branch
    paths:
      - 'environments/**'
  workflow_dispatch:  # Allow manual triggers

# Concurrency control to ensure only one workflow runs at a time
concurrency:
  group: deploy-and-destroy-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Deploy Backend first
  deploy-backend:
    if: github.ref == 'refs/heads/developer'  # Only run for developer branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/backend

      - name: Terraform Plan for Dev
        run: terraform plan -var-file=dev.tfvars
        working-directory: ./environments/backend

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend

  # Deploy Dev Infrastructure AFTER Backend is deployed
  deploy-dev:
    needs: deploy-backend  # Runs only after backend deployment is successful
    if: github.ref == 'refs/heads/developer'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/infra

      - name: Terraform Plan for Dev
        run: terraform plan -var-file=dev.tfvars
        working-directory: ./environments/infra

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  # Destroy Dev Infra (Manual Trigger)
  destroy-dev:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/infra

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/infra

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/infra

  # Destroy Backend AFTER Destroying Infra
  destroy-backend:
    needs: destroy-dev  # Runs only after infra destruction is successful
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/backend

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -destroy -var-file=dev.tfvars
        working-directory: ./environments/backend

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var-file=dev.tfvars
        working-directory: ./environments/backend
