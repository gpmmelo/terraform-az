name: Deploy Environments

on:
  push:
    branches:
      - developer  # Trigger on push to developer branch
    paths:
      - 'environments/**'
  pull_request:
    branches:
      - main  # Trigger on PR to main (prod deployment after approval)
  workflow_dispatch:  # Allow manual triggers for production deploy/destroy

concurrency:
  group: deploy-and-destroy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Deploy Dev on push to `developer`
  deploy-dev:
    if: github.ref == 'refs/heads/developer'  # Run only on developer branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -var "subscription_id=$AZURE_SUBSCRIPTION_ID" -backend-config=backend-dev.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      - name: Terraform Plan for Dev
        run: terraform plan -var "admin_password=$ADMIN_PASSWORD" -var-file=dev.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      - name: Terraform Apply for Dev
        run: terraform apply -auto-approve -var "admin_password=$ADMIN_PASSWORD" -var-file=dev.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

  # Deploy Prod on PR merge to `main`
  deploy-prod:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'  # Run only on PR to main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -var "subscription_id=$AZURE_SUBSCRIPTION_ID" -backend-config=backend-prod.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Plan for Prod
        run: -var "admin_password=$ADMIN_PASSWORD" -var-file=prod.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Wait for manual approval (Production Deploy)
        uses: hmarr/auto-approve-action@v3

      - name: Terraform Apply for Prod
        run: terraform apply -auto-approve -var-file=prod.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
