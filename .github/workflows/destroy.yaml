name: Destroy Environments

on:
  push:
    branches:
      - developer  # Trigger on push to developer branch
    paths:
      - 'environments/**'
  pull_request:
    branches:
      - main  # Trigger on PR to main (prod deployment after approval)
  workflow_dispatch:  # Allow manual triggers for production deploy/destroy

concurrency:
  group: destroy-${{ github.ref }}
  cancel-in-progress: true

jobs:
# Destroy Dev Infra (Manual Trigger)
  destroy-dev:
    if: github.event_name == 'workflow_dispatch'  # Run only on manual trigger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -var "subscription_id=$AZURE_SUBSCRIPTION_ID" -backend-config=backend-dev.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Plan for Destroy (Dev)
        run: terraform plan -var "admin_password=$ADMIN_PASSWORD" -var-file=dev.tfvars -lock=false
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Dev)
        run: terraform destroy -auto-approve -var "admin_password=$ADMIN_PASSWORD" -var-file=dev.tfvars -lock=false
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  # Destroy Prod Infra (Manual Trigger)
  destroy-prod:
    if: github.event_name == 'workflow_dispatch'  # Run only on manual trigger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -var "subscription_id=$AZURE_SUBSCRIPTION_ID" -backend-config=backend-prod.tfvars
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Plan for Destroy (Prod)
        run: terraform plan -auto-approve -var "admin_password=$ADMIN_PASSWORD" -destroy -var-file=prod.tfvars -lock=false
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-leads

      - name: Terraform Destroy (Prod)
        run: terraform destroy -auto-approve -var "admin_password=$ADMIN_PASSWORD" -auto-approve -var-file=prod.tfvars -lock=false
        working-directory: ./environments/infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # Ensure this is set
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}